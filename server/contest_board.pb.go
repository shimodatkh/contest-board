// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: server/contest_board.proto

// import "google/protobuf/empty.proto";

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutMeasurementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Score float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *PutMeasurementReq) Reset() {
	*x = PutMeasurementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_contest_board_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMeasurementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMeasurementReq) ProtoMessage() {}

func (x *PutMeasurementReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_contest_board_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMeasurementReq.ProtoReflect.Descriptor instead.
func (*PutMeasurementReq) Descriptor() ([]byte, []int) {
	return file_server_contest_board_proto_rawDescGZIP(), []int{0}
}

func (x *PutMeasurementReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PutMeasurementReq) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type PutMeasurementRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Score float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *PutMeasurementRes) Reset() {
	*x = PutMeasurementRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_contest_board_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMeasurementRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMeasurementRes) ProtoMessage() {}

func (x *PutMeasurementRes) ProtoReflect() protoreflect.Message {
	mi := &file_server_contest_board_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMeasurementRes.ProtoReflect.Descriptor instead.
func (*PutMeasurementRes) Descriptor() ([]byte, []int) {
	return file_server_contest_board_proto_rawDescGZIP(), []int{1}
}

func (x *PutMeasurementRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PutMeasurementRes) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type GetMeasurementsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMeasurementsReq) Reset() {
	*x = GetMeasurementsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_contest_board_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeasurementsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasurementsReq) ProtoMessage() {}

func (x *GetMeasurementsReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_contest_board_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasurementsReq.ProtoReflect.Descriptor instead.
func (*GetMeasurementsReq) Descriptor() ([]byte, []int) {
	return file_server_contest_board_proto_rawDescGZIP(), []int{2}
}

type GetMeasurementsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measurements []*Measurement `protobuf:"bytes,1,rep,name=measurements,proto3" json:"measurements,omitempty"`
}

func (x *GetMeasurementsRes) Reset() {
	*x = GetMeasurementsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_contest_board_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeasurementsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasurementsRes) ProtoMessage() {}

func (x *GetMeasurementsRes) ProtoReflect() protoreflect.Message {
	mi := &file_server_contest_board_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasurementsRes.ProtoReflect.Descriptor instead.
func (*GetMeasurementsRes) Descriptor() ([]byte, []int) {
	return file_server_contest_board_proto_rawDescGZIP(), []int{3}
}

func (x *GetMeasurementsRes) GetMeasurements() []*Measurement {
	if x != nil {
		return x.Measurements
	}
	return nil
}

type Measurement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Score float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Measurement) Reset() {
	*x = Measurement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_contest_board_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Measurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Measurement) ProtoMessage() {}

func (x *Measurement) ProtoReflect() protoreflect.Message {
	mi := &file_server_contest_board_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Measurement.ProtoReflect.Descriptor instead.
func (*Measurement) Descriptor() ([]byte, []int) {
	return file_server_contest_board_proto_rawDescGZIP(), []int{4}
}

func (x *Measurement) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Measurement) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_server_contest_board_proto protoreflect.FileDescriptor

var file_server_contest_board_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x39,
	0x0a, 0x11, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x22,
	0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x33, 0x0a,
	0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x32, 0xa1, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x46, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75,
	0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x69, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x6b, 0x68, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x2d, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_server_contest_board_proto_rawDescOnce sync.Once
	file_server_contest_board_proto_rawDescData = file_server_contest_board_proto_rawDesc
)

func file_server_contest_board_proto_rawDescGZIP() []byte {
	file_server_contest_board_proto_rawDescOnce.Do(func() {
		file_server_contest_board_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_contest_board_proto_rawDescData)
	})
	return file_server_contest_board_proto_rawDescData
}

var file_server_contest_board_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_server_contest_board_proto_goTypes = []interface{}{
	(*PutMeasurementReq)(nil),  // 0: proto.PutMeasurementReq
	(*PutMeasurementRes)(nil),  // 1: proto.PutMeasurementRes
	(*GetMeasurementsReq)(nil), // 2: proto.GetMeasurementsReq
	(*GetMeasurementsRes)(nil), // 3: proto.GetMeasurementsRes
	(*Measurement)(nil),        // 4: proto.Measurement
}
var file_server_contest_board_proto_depIdxs = []int32{
	4, // 0: proto.GetMeasurementsRes.measurements:type_name -> proto.Measurement
	0, // 1: proto.ContestBoard.PutMeasurement:input_type -> proto.PutMeasurementReq
	2, // 2: proto.ContestBoard.GetMeasurements:input_type -> proto.GetMeasurementsReq
	1, // 3: proto.ContestBoard.PutMeasurement:output_type -> proto.PutMeasurementRes
	3, // 4: proto.ContestBoard.GetMeasurements:output_type -> proto.GetMeasurementsRes
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_server_contest_board_proto_init() }
func file_server_contest_board_proto_init() {
	if File_server_contest_board_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_contest_board_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMeasurementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_contest_board_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMeasurementRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_contest_board_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeasurementsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_contest_board_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeasurementsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_contest_board_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Measurement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_contest_board_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_contest_board_proto_goTypes,
		DependencyIndexes: file_server_contest_board_proto_depIdxs,
		MessageInfos:      file_server_contest_board_proto_msgTypes,
	}.Build()
	File_server_contest_board_proto = out.File
	file_server_contest_board_proto_rawDesc = nil
	file_server_contest_board_proto_goTypes = nil
	file_server_contest_board_proto_depIdxs = nil
}
